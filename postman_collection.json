{
	"info": {
		"_postman_id": "new-auth-flow-collection",
		"name": "Flutter Backend API - New Authentication Flow",
		"description": "Complete API collection for the new authentication system with separate user and advertiser flows, OTP verification, and comprehensive endpoint coverage.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Step 1: Send OTP - User (with all data)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "user"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"John Doe\",\n  \"phone\": \"+1234567890\",\n  \"password\": \"securepassword123\",\n  \"profileImage\": \"https://example.com/profile.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/send-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "send-otp"]
						},
						"description": "Step 1: User enters all data and requests OTP for phone verification. This is the first step in the user registration process."
					},
					"response": []
				},
				{
					"name": "Step 1: Send OTP - Advertiser (with all data)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "advertiser"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"Jane Smith\",\n  \"phone\": \"+1234567891\",\n  \"password\": \"securepassword123\",\n  \"storeName\": \"Smith's Electronics\",\n  \"storeImage\": \"https://example.com/store.jpg\",\n  \"description\": \"Best electronics store in town\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/send-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "send-otp"]
						},
						"description": "Step 1: Advertiser enters all data and requests OTP for phone verification. This is the first step in the advertiser registration process."
					},
					"response": []
				},
				{
					"name": "Step 2: Verify OTP - User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "user"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"otp\": \"123456\",\n  \"phone\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "verify-otp"]
						},
						"description": "Step 2: Verify OTP and create user account. Only requires OTP and phone - all other data is retrieved from Step 1."
					},
					"response": []
				},
				{
					"name": "Step 2: Verify OTP - Advertiser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "advertiser"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"otp\": \"123456\",\n  \"phone\": \"+1234567891\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "verify-otp"]
						},
						"description": "Step 2: Verify OTP and create advertiser account. Only requires OTP and phone - all other data is retrieved from Step 1."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phone\": \"+1234567890\",\n  \"password\": \"securepassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/login",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "login"]
						},
						"description": "Login with phone number and password. Works for both users and advertisers."
					},
					"response": []
				}
			],
			"description": "Complete authentication flow: Step 1: User enters all data and requests OTP, Step 2: User verifies OTP with all data to create account and get token."
		},
		{
			"name": "üîë Password Reset",
			"item": [
				{
					"name": "Request Password Reset - User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "user"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phone\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/forgot-password",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "forgot-password"]
						},
						"description": "Request password reset OTP for a user account."
					},
					"response": []
				},
				{
					"name": "Request Password Reset - Advertiser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "advertiser"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phone\": \"+1234567891\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/forgot-password",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "forgot-password"]
						},
						"description": "Request password reset OTP for an advertiser account."
					},
					"response": []
				},
				{
					"name": "Reset Password - User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "user"
							},
							{
								"key": "X-Phone",
								"value": "+1234567890"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"otp\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/reset-password",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "reset-password"]
						},
						"description": "Reset user password using OTP verification."
					},
					"response": []
				},
				{
					"name": "Reset Password - Advertiser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-User-Type",
								"value": "advertiser"
							},
							{
								"key": "X-Phone",
								"value": "+1234567891"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"otp\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/reset-password",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "reset-password"]
						},
						"description": "Reset advertiser password using OTP verification."
					},
					"response": []
				}
			],
			"description": "Password reset functionality for both user types using OTP verification."
		},
		{
			"name": "üë§ User Management",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "profile"]
						},
						"description": "Get the authenticated user's profile information."
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"John Doe\",\n  \"bio\": \"Tech enthusiast and developer\",\n  \"website\": \"https://johndoe.com\",\n  \"location\": \"New York\",\n  \"socialLinks\": {\n    \"instagram\": \"@johndoe\",\n    \"twitter\": \"@johndoe\"\n  },\n  \"metadata\": {\n    \"preferences\": {\n      \"theme\": \"dark\",\n      \"notifications\": true\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "profile"]
						},
						"description": "Update the authenticated user's profile information."
					},
					"response": []
				},
				{
					"name": "Get User by ID (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/1?userType=user",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "1"],
							"query": [
								{
									"key": "userType",
									"value": "user"
								}
							]
						},
						"description": "Get user information by ID. Requires authentication and userType query parameter."
					},
					"response": []
				},
				{
					"name": "Get Advertiser by ID (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/1?userType=advertiser",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "1"],
							"query": [
								{
									"key": "userType",
									"value": "advertiser"
								}
							]
						},
						"description": "Get advertiser information by ID. Requires authentication and userType query parameter."
					},
					"response": []
				}
			],
			"description": "User profile management and information retrieval endpoints."
		},
		{
			"name": "üìù Posts",
			"item": [
				{
					"name": "Get All Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"]
						},
						"description": "Retrieve all posts with optional filtering and pagination."
					},
					"response": []
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Retrieve a specific post by its ID."
					},
					"response": []
				},
				{
					"name": "Create Post (Advertiser Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "advertiser_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "type",
									"value": "post",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Amazing Product",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is an amazing product description",
									"type": "text"
								},
								{
									"key": "price",
									"value": "99.99",
									"type": "text"
								},
								{
									"key": "old_price",
									"value": "129.99",
									"type": "text"
								},
								{
									"key": "expiration_date",
									"value": "2024-12-31T23:59:59Z",
									"type": "text"
								},
								{
									"key": "with_reservation",
									"value": "true",
									"type": "text"
								},
								{
									"key": "reservation_time",
									"value": "2024-12-25T12:00:00Z",
									"type": "text"
								},
								{
									"key": "reservation_limit",
									"value": "10",
									"type": "text"
								},
								{
									"key": "social_media_links",
									"value": "{\"instagram\": \"https://instagram.com/post\", \"facebook\": \"https://facebook.com/post\"}",
									"type": "text"
								},
								{
									"key": "media",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"]
						},
						"description": "Create a new post. Only advertisers can create posts. Supports both images and videos."
					},
					"response": []
				},
				{
					"name": "Create Reel (Advertiser Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "advertiser_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "type",
									"value": "reel",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Amazing Product Video",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is an amazing product video description",
									"type": "text"
								},
								{
									"key": "media",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"]
						},
						"description": "Create a new reel (video post). Only advertisers can create reels."
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Product Title\",\n  \"description\": \"Updated product description\",\n  \"price\": 89.99,\n  \"expiration_date\": \"2024-12-31T23:59:59Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Update an existing post. Only the post owner can update it."
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/1",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", "1"]
						},
						"description": "Delete a post. Only the post owner can delete it."
					},
					"response": []
				}
			],
			"description": "Post management endpoints for creating, reading, updating, and deleting posts and reels."
		},
		{
			"name": "üìÖ Reservations",
			"item": [
				{
					"name": "Get All Reservations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reservations",
							"host": ["{{base_url}}"],
							"path": ["api", "reservations"]
						},
						"description": "Retrieve all reservations. Users can see their own reservations, advertisers can see reservations for their posts."
					},
					"response": []
				},
				{
					"name": "Get Reservation by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reservations/1",
							"host": ["{{base_url}}"],
							"path": ["api", "reservations", "1"]
						},
						"description": "Retrieve a specific reservation by its ID."
					},
					"response": []
				},
				{
					"name": "Create Reservation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": 1,\n  \"client_type\": \"user\",\n  \"post_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reservations",
							"host": ["{{base_url}}"],
							"path": ["api", "reservations"]
						},
						"description": "Create a new reservation for a post. Both users and advertisers can make reservations."
					},
					"response": []
				},
				{
					"name": "Update Reservation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"cancelled\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reservations/1",
							"host": ["{{base_url}}"],
							"path": ["api", "reservations", "1"]
						},
						"description": "Update a reservation status. Users can cancel their reservations, advertisers can update status."
					},
					"response": []
				},
				{
					"name": "Delete Reservation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reservations/1",
							"host": ["{{base_url}}"],
							"path": ["api", "reservations", "1"]
						},
						"description": "Delete a reservation. Only the reservation owner can delete it."
					},
					"response": []
				}
			],
			"description": "Reservation management endpoints for booking and managing post reservations."
		},
		{
			"name": "üí¨ Comments",
			"item": [
				{
					"name": "Get Comments for Post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/comments?post_id=1",
							"host": ["{{base_url}}"],
							"path": ["api", "comments"],
							"query": [
								{
									"key": "post_id",
									"value": "1"
								}
							]
						},
						"description": "Retrieve all comments for a specific post."
					},
					"response": []
				},
				{
					"name": "Create Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"post_id\": 1,\n  \"user_id\": 1,\n  \"user_type\": \"user\",\n  \"content\": \"Great post! This looks amazing.\",\n  \"parent_comment_id\": null\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments",
							"host": ["{{base_url}}"],
							"path": ["api", "comments"]
						},
						"description": "Create a new comment on a post. Both users and advertisers can comment."
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Updated comment content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments/1",
							"host": ["{{base_url}}"],
							"path": ["api", "comments", "1"]
						},
						"description": "Update a comment. Only the comment author can update it."
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/comments/1",
							"host": ["{{base_url}}"],
							"path": ["api", "comments", "1"]
						},
						"description": "Delete a comment. Only the comment author can delete it."
					},
					"response": []
				}
			],
			"description": "Comment management endpoints for posting and managing comments on posts."
		},
		{
			"name": "üîß Utility",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": ["{{base_url}}"],
							"path": ["health"]
						},
						"description": "Check if the server is running and healthy."
					},
					"response": []
				},
				{
					"name": "Cleanup Expired OTPs",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/cleanup-otps",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "cleanup-otps"]
						},
						"description": "Clean up expired and used OTP codes from the database."
					},
					"response": []
				},
				{
					"name": "Get Latest OTP (Development)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-User-Type",
								"value": "user"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/otp/+1234567890/verification",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "otp", "+1234567890", "verification"]
						},
						"description": "Get the latest OTP for testing purposes. Only available in development mode."
					},
					"response": []
				}
			],
			"description": "Utility endpoints for system health checks and development tools."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script to set up common variables",
					"if (pm.environment.get('base_url') === '') {",
					"    pm.environment.set('base_url', 'http://localhost:5000');",
					"}",
					"",
					"// Log the request being made",
					"console.log('Making request to: ' + pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test script to handle common response scenarios",
					"pm.test('Status code is valid', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 401, 403, 404, 500]);",
					"});",
					"",
					"pm.test('Response has required structure', function () {",
					"    if (pm.response.code === 200 || pm.response.code === 201) {",
					"        pm.expect(pm.response.json()).to.have.property('message');",
					"}",
					"});",
					"",
					"// Auto-save auth token for login responses",
					"if (pm.response.code === 200 && pm.request.url.path.includes('/login')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.token) {",
					"        pm.environment.set('auth_token', responseJson.token);",
					"        console.log('Auth token saved automatically');",
					"}",
					"}",
					"",
					"// Auto-save OTP for testing",
					"if (pm.response.code === 200 && pm.request.url.path.includes('/send-otp')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.otp) {",
					"        pm.environment.set('last_otp', responseJson.otp);",
					"        console.log('OTP saved: ' + responseJson.otp);",
					"}",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "last_otp",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "advertiser_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "post_id",
			"value": "",
			"type": "string"
		}
	]
}
